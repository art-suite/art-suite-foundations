# import &StandardImport, Neptune.Art.EpochedState
import &StandardImport

epoch = new &source.EpochClass

suite: ->
  test "queue function", -> new Promise (resolve) ->
    epoch.queueItem ->
      resolve()

  test "function handled on nextTick", -> new Promise (resolve) ->
    count = 0
    epoch.queueItem ->
      assert.eq count, 1
      resolve()
    count++
    assert.eq epoch.epochLength, 1

  test "onNextReady works even if there are no changingElements", ->
    # call twice in case there are some channgingElements
    assert.eq epoch.epochLength, 0

    _promise = epoch.onNextReady()
    assert.eq epoch._epochQueued, true
    assert.eq epoch.epochLength, 0
    _promise

  test "onNextReady forceNextEpoch = false: shouldn't force an epoch", ->
    # call twice in case there are some channgingElements
    assert.eq epoch.epochLength, 0

    epoch.onNextReady (->), false

    assert.eq epoch._epochQueued, false
    assert.eq epoch.epochLength, 0
