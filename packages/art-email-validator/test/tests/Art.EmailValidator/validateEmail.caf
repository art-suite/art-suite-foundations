import &StandardImport

unknown560Response = "560: Confucious say, 'you suck.'"
realworldSpanhausResponse = "" 550 5.7.0 Your mail from 54.211.106.206 was rejected due to listing in Spamhaus XBL. See https://www.spamhaus.org/query/ip/54.211.106.206

suite:
  valid: ->
    @timeout 10000

    each [email, emailServer] in []
        [] :shanebdavis@gmail.com :gmail-smtp-in.l.google.com
      test "valid #{email} #{emailServer}" ->
        validateEmail
          {}
            email
            smtpFrom: "test@art.suite.com"
            domain: :gmail.com
          newTestSocket()
        .then (result) ->
          assert.doesNotExist result.didYouMean
          assert.selectedEq
            valid: true
            reason: "mailboxExists"
            result

  invalid: ->
    test "mailboxDoesNotExist" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          domain:   :gmail.com
        newTestSocket
          rcpt: "550: No findy."

      .then (result) ->
        assert.doesNotExist result.didYouMean
        assert.selectedEq
          valid: false
          invalid: true
          reason: "mailboxDoesNotExist"
          result
        assert.isString result.message


    test "mailboxFull" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          domain:   :gmail.com
        newTestSocket
          rcpt: "452: Umph! I ate too much email!"

      .then (result) ->
        assert.doesNotExist result.didYouMean
        assert.selectedEq
          valid: false
          invalid: true
          reason: "mailboxFull"
          result
        assert.isString result.message

    test "malformedDomain", ->
      validateEmail
        email: :shanebdavis@gmail
        newTestSocket()
      .then (result) ->
        assert.isString result.message
        assert.eq
          valid:      false
          invalid:    true
          reason:     :malformedDomain
          didYouMean: :shanebdavis@gmail.com
          objectWithout result, :message, :emailServer

    test "smtpTimeout", ->
      validateEmail
        email: :shanebdavis@gmail.com
        smtpFrom: :test@art.suite.com
        timeout: 100
        newTestSocket null, 200

      .then (result) ->
        assert.eq
          valid:      false
          invalid:    false
          reason:     :smtpTimeout
          objectWithout result, :message, :emailServer

    test "smtpError560" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          domain:   :gmail.com
        newTestSocket
          rcpt:     unknown560Response

      .then (result) ->
        assert.eq
          valid:        false
          invalid:      false
          reason:       :smtpError560
          smtpStatus:       clientFailure
          smtpStatusCode:   560
          refusedWith:  unknown560Response
          objectWithout result, :message, :emailServer

  fallbackValidator: ->
    @timeout 10000

    test "smtpError560 with fallbackValidator" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          fallbackValidator: ->
            valid: true
            message: "It's cool, man"
        newTestSocket rcpt: unknown560Response

      .then (result) ->
        assert.selectedEq
          valid: true
          usedFallbackValidator: true
          message: "It's cool, man"
          reason: "fallbackValidator"
          objectWithout result, :emailServer

    test "smtpTimeout with fallbackValidator" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          timeout:  100
          fallbackValidator: (options, ambiguousResult) ->
            assert.eq
              valid:    false
              invalid:  false
              reason: "smtpTimeout"
              objectWithout ambiguousResult, :message, :emailServer
            valid: true
            message: "It's cool, man"
            reason: "superNinja"
        newTestSocket null, 200

      .then (result) ->
        assert.selectedEq
          valid: true
          usedFallbackValidator: true
          message: "It's cool, man"
          reason: :superNinja
          objectWithout result, :emailServer

    test "smtpError560 with fallbackValidator with custom reason" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          fallbackValidator: ->
            valid: true
            message: "It's cool, man"
            reason: "superNinja"
        newTestSocket rcpt: unknown560Response

      .then (result) ->
        assert.eq
          valid: true
          usedFallbackValidator: true
          message: "It's cool, man"
          reason: "superNinja"
          objectWithout result, :emailServer

    test "smtpError560 without fallbackValidator" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com

        newTestSocket rcpt: unknown560Response

      .then (result) ->
        assert.eq
          valid:            false
          invalid:          false
          reason:           :smtpError560
          smtpStatus:       clientFailure
          smtpStatusCode:   560
          refusedWith:      unknown560Response
          objectWithout result, :emailServer, :message

        assert.isString result.message


  verbose: ->

    test "verbose: true", ->
      validateEmail
        email: :shanebdavis@gmail.com
        smtpFrom: "test@art.suite.com"
        verbose: true
        newTestSocket()

    test "verbose: 2", ->
      validateEmail
        email: :shanebdavis@gmail.com
        smtpFrom: "test@art.suite.com"
        verbose: 2
        newTestSocket()

    test "verbose fallbackValidator" ->
      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          verbose:  true
          fallbackValidator: ->
            valid: true
            message: "It's cool, man"

        newTestSocket rcpt: unknown560Response

  regressions: ->

    test "enhancedStatusCodes verbose realworldSpanhausResponse", ->

      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com
          # verbose:  true

        newTestSocket rcpt: realworldSpanhausResponse = "" 550 5.7.0 Your mail from 54.211.106.206 was rejected due to listing in Spamhaus XBL. See https://www.spamhaus.org/query/ip/54.211.106.206

      .then (result) ->
        assert.selectedEq
          valid:    false
          invalid:  false
          reason:   :clientFailure
          result

    test "Spamhaus enhancedStatusCodes", ->

      validateEmail
        {}
          email:    :shanebdavis_xyz@gmail.com
          smtpFrom: :test@art.suite.com

        newTestSocket rcpt: realworldSpanhausResponse

      .then (result) ->
        assert.eq
          valid:                  false
          invalid:                false
          reason:                 clientFailure
          smtpStatus:             clientFailure
          smtpStatusCode:         550
          smtpEnhancedStatusCode: :5.7.0
          smtpStatusSubject:      :security
          refusedWith:            realworldSpanhausResponse
          objectWithout result, :emailServer, :message

        assert.isString result.message

    test "enhancedStatusCodes verbose realworldAbuseAttNetResponse", ->
      validateEmail
        {}
          email:    :moonshine410331@att.net
          smtpFrom: :test@art.suite.com
          # verbose:  true

        newTestSocket rcpt: realworldAbuseAttNetResponse = "" 553 5.3.0 alph154 DNSBL:RBL 521< 52.3.253.174 >_is_blocked.For assistance forward this email to abuse_rbl@abuse-att.net\r
      .then (result) ->
        assert.eq
          valid:                  false
          invalid:                false
          reason:                 :otherFailure
          smtpStatus:             clientFailure
          smtpStatusSubject:      "mailSystem"
          smtpStatusCode:         553
          smtpEnhancedStatusCode: "5.3.0"
          refusedWith:
            "553 5.3.0 alph154 DNSBL:RBL 521< 52.3.253.174 >_is_blocked.For assistance forward this email to abuse_rbl@abuse-att.net "

          objectWithout result, :emailServer, :message
