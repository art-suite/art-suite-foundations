import &StandardImport

testPluralize = (map) ->
  each params, expected in map
    params = compactFlatten params
    test "pluralize #{(array p in params with formattedInspect p).join ', '} >> #{formattedInspect expected}" ->
      assert.eq
        pluralize params...
        expected

suite:
  justPluralize: ->
    testPluralize
      users:                :user
      users:                :users
      people:               :person
      people:               "" person who loves me
      people_:              :person_
      person_who_loves_mes: :person_who_loves_me
      people:               :people

  pluralizeWithNumbers: ->
    testPluralize
      "0 users":            0   :user
      "1 user":             1   :user
      "-1 users":           -1  :user
      "2 users":            2   :user
      "1 person":           1   :person
      "3 people":           3   :person

  customPluralForm: ->
    testPluralize
      "3 toads":            3 :dragon :toads
      "1 dragon":           1 :dragon :toads

  regressions: ->
    testPluralize
      users:  null        :user
      users:  undefined   :user
      users:  ''          :user
