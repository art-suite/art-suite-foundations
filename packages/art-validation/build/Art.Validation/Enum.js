"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["compactFlatten", "ConfigurationError", "merge", "isString", "present", "w"], [global, require('./StandardImport')], (compactFlatten, ConfigurationError, merge, isString, present, w) => {return {createEnumFieldType: function(options) {let rawEnum, normalizedEnum; rawEnum = options.enum; normalizedEnum = compactFlatten(Caf.array(compactFlatten(rawEnum), (str) => {if (!(isString(str) && present(str))) {throw new ConfigurationError(`Error: \`enum:\` option must provide a list of strings. ${Caf.toString({formattedInspect: {rawEnum, normalizedEnum}})}`);}; return w(str);})); if (normalizedEnum.length === 0) {throw new ConfigurationError(`Error: \`enum:\` requires at east one valid enum value. ${Caf.toString({formattedInspect: {rawEnum, normalizedEnum}})}`);}; return merge(options, {enum: normalizedEnum, fieldType: "enum", dataType: "string", validate: (v) => Caf.in(v, normalizedEnum)});}};});});
//# sourceMappingURL=Enum.js.map
