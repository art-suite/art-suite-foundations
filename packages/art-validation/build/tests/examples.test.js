"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["test", "Validator", "assert"], [global, require('./StandardImport')], (test, Validator, assert) => {test("simples", function() {let validator; validator = new Validator({name: "string"}); assert.true(!!validator.validate({name: "Alice"})); assert.true(!!validator.validate({name: "Alice", age: 123})); return assert.throws(() => validator.validate({name: 123}));}); test("required", function() {let validator; validator = new Validator({name: "required string"}); assert.true(!!validator.validate({name: "Alice"})); return assert.throws(() => validator.validate({}));}); test("exclusive", function() {let validator; validator = new Validator({name: "string"}, {exclusive: true}); assert.true(!!validator.validate({name: "Alice"})); assert.throws(() => validator.validate({name: "Alice", age: 123})); return assert.throws(() => validator.validate({name: 123}));}); return test("example 2", function() {let validator; validator = new Validator({name: ["required string", {maxLength: 5}], age: "integer"}); assert.true(!!validator.validate({name: "Alice"})); assert.true(!!validator.validate({name: "Alice", someField: "OK, notExclusive"})); assert.throws(() => validator.validate({name: "Veronica"})); return assert.throws(() => validator.validate({name: "Veronica", number: "not-a-number"}));});});});
//# sourceMappingURL=examples.test.js.map
