"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["describe", "Date", "test", "formattedInspect", "assert", "Validator"], [global, require('./StandardImport')], (describe, Date, test, formattedInspect, assert, Validator) => {return describe({standardFieldTypes: function() {return Caf.each2({id: {"": null, anything: "anything", pReSeRVEcAse: "pReSeRVEcAse", " no space": null, "no space": null}, date: {"2020-10-29": new Date("2020-10-29")}, communicationStatus: {foo: null, success: "success"}, username: {a: null, abc: "abc", "a bc": null}, url: {www: null, "128.4": null, "128.4.4": null, "128.4.4.4": "http://128.4.4.4", "www.barracuda": "http://www.barracuda", "www.bar": "http://www.bar", "www.bar.com": "http://www.bar.com", "www.bar.com:8000": "http://www.bar.com:8000", "www.gravatar.com/avatar/c72792601425": "http://www.gravatar.com/avatar/c72792601425", "http://www.bar.com": "http://www.bar.com", "http://www.BAR.com": "http://www.bar.com"}}, (tests, type) => Caf.each2(tests, (output, input) => test(`${Caf.toString(type)}: ${Caf.toString(input)} >> ${Caf.toString((output != null) ? formattedInspect(output) : "(invalid)")}`, () => (output != null) ? assert.eq((new Validator({myField: type})).validate({myField: input}), {myField: output}) : assert.rejects(() => (new Validator({myField: type})).validate({myField: input})))));}});});});
//# sourceMappingURL=FieldTypes.test.js.map
