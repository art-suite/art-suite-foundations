import &StandardImport

describe
  standardFieldTypes: ->
    each tests, type in
        id:
          '': null
          anything:     :anything
          pReSeRVEcAse: :pReSeRVEcAse
          " no space":  null
          "no space":   null

        date:
          2020-10-29: new Date :2020-10-29

        communicationStatus:
          foo:      null
          success:  :success

        username:
          a:      null
          abc:    :abc
          "a bc": null

        integer:
          -10:      -10
          0:        0
          123:      123
          123.5:    123
          123.9:    123
          10000000000:     10000000000   # 10 billion > larger than 32 bit int
          -10000000000:   -10000000000  # 10 billion > larger than 32 bit int

        url:
          www:                                  null
          128.4:                                null
          128.4.4:                              null
          128.4.4.4:                            :http://128.4.4.4

          www.barracuda:                        :http://www.barracuda
          www.bar:                              :http://www.bar
          www.bar.com:                          :http://www.bar.com
          www.bar.com:8000:                     :http://www.bar.com:8000
          www.gravatar.com/avatar/c72792601425: :http://www.gravatar.com/avatar/c72792601425
          http://www.bar.com:                   :http://www.bar.com
          http://www.BAR.com:                   :http://www.bar.com

      each output, input in tests
        test "#{type}: #{input} >> #{if output? then formattedInspect output else "(invalid)"}" ->
          if output?
            validator = new Validator myField: type

            if validator.fields.myField extract fromString
              input = fromString input
              log {} input

            assert.eq
              new Validator myField: type
              .validate myField: input
              myField: output
          else
            assert.rejects ->
              new Validator myField: type
              .validate myField: input

