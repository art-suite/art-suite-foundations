import &StandardImport

test "preprocess creates a new object if values change (via default)" ->
  v1 = new Validator count: fieldType: :number default: 0

  assert.notEqual
    v1.preprocess (input = {}), true
    input

test "preprocess creates a new object if values change (via preprocess)" ->
  v1 = new Validator count: fieldType: :number preprocess: (a) -> (a | 0) + 1

  assert.notEqual
    v1.preprocess input = count: 1
    input

test "preprocess returns the exact object if values don't change (via defaults)" ->
  v1 = new Validator count: fieldType: :number default: 0

  assert.equal
    v1.preprocess (input = count: 444), true
    input

test "preprocess returns the exact object if values don't change (via preprocess)" ->
  v1 = new Validator count: fieldType: :number preprocess: (a) -> a

  assert.equal
    v1.preprocess input = count: 444
    input

test "preprocess does not apply defaults" ->
  v1 = new Validator count: fieldType: :number default: 0
  assert.eq
    v1.preprocess {}
    {}

  assert.eq
    v1.preprocess count: null
    count: null

  assert.eq
    v1.preprocess count: :123
    count: :123

test "preprocess does apply preprocess" ->
  v1 = new Validator count: fieldType: :number default: 0 preprocess: (a) -> (a | 0) + 1
  assert.eq
    v1.preprocess {}
    {}

  assert.eq
    v1.preprocess count: null
    count: null

  assert.eq
    v1.preprocess count: :123
    count: 124

test "preprocess CAN apply preprocess AND default values ARE preprocessed" ->
  v1 = new Validator count: fieldType: :number default: 0 preprocess: (a) -> (a | 0) + 1
  assert.eq
    v1.preprocess {}, true
    count: 1

  assert.eq
    v1.preprocess (count: null), true
    count: null

  assert.eq
    v1.preprocess (count: :123), true
    count: 124
