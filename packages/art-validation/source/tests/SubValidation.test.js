"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["test", "Validator", "assert"], [global, require('./StandardImport')], (test, Validator, assert) => {test("fields", function() {let v; v = new Validator({dimensions: {fields: {x: "number", y: "number"}}}); v.validate({dimensions: {x: 1}}); v.validate({dimensions: {}}); v.validate({dimensions: null}); v.validate({dimensions: undefined}); assert.throws(() => v.validate({dimensions: "not a string"})); assert.throws(() => v.validate({dimensions: 1})); assert.throws(() => v.validate({dimensions: []})); assert.throws(() => v.validate({dimensions: {x: "not a string"}})); return assert.throws(() => v.validate({dimensions: {z: 1}}));}); test("required fields", function() {let v; v = new Validator({dimensions: {required: {fields: {x: "number", y: "number"}}}}); assert.throws(() => v.validate({dimensions: null})); return assert.throws(() => v.validate({dimensions: undefined}));}); return test("preprocess", function() {let v; v = new Validator({normalFoo: {preprocess: (v) => v.trim()}, myFields: {required: {fields: {foo: {preprocess: (v) => v.trim()}}}}}); return assert.eq({myFields: {foo: "hi"}, normalFoo: "hi"}, v.validate({myFields: {foo: "   hi   "}, normalFoo: " hi "}));});});});
//# sourceMappingURL=SubValidation.test.js.map
