import &ArtStandardLib

{}
  readJson = (file) ->
    if &fsExtra.existsSync file
      JSON.parse &fsExtra.readFileSync file
    else {}

  writeJson: (file, data) ->
    &fsExtra.writeFileSync file,
      consistentJsonStringify data, '  '
      + :\n


  loadAllPackages: ->
    &globPromise "!(node_modules)/*/**/package.json"
    .then (results) ->
      object file from-array results with-key file.split(/\/package.json$/)[0]
        readJson file


  # /** Executes a shell command and return it as a Promise.
  #   * @param cmd {string}
  #   * @return {Promise<string>}
  #   */
  execShellCommand: (cmd) ->
    new Promise (resolve, reject) ->
      &child_process.exec cmd, (error, stdout, stderr) =>
        if (error) reject stderr || stdout
        else resolve stdout || stderr
