"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["BaseObject", "Promise", "JSON", "log", "Error"], [global, require('art-standard-lib'), require('art-class-system')], (BaseObject, Promise, JSON, log, Error) => {let JsonStore; return JsonStore = Caf.defClass(class JsonStore extends BaseObject {constructor(store = require('./AsyncLocalStorage')) {super(...arguments); this.store = store;};}, function(JsonStore, classSuper, instanceSuper) {this.singletonClass(); this.prototype.setItem = function(key, value) {let json; json = null; return Promise.then(() => this.store.getItem(key)).then((oldJson) => (oldJson !== (json = JSON.stringify(value))) ? Promise.then(() => this.store.setItem(key, json)).then(() => json) : null).catch((error) => {log.error({JsonStore_setItem: {key, value, json, error}}); return (() => {throw error;})();});}; this.prototype.getItem = function(key) {return Promise.then(() => this.store.getItem(key)).then((json) => json && JSON.parse(json)).catch((error) => {log.error({JsonStore_getItem: {key, error}}); return (() => {throw error;})();});}; this.prototype.removeItem = function(k) {return Promise.then(() => this.store.removeItem(k));}; this.prototype.clear = function() {return Promise.then(() => this.store.clear());}; this.prototype.key = function(i) {return Promise.then(() => this.store.key(i));}; this.prototype.getLength = function() {return Promise.then(() => {let temp, temp1, base; return ((temp = ((temp1 = Caf.isF((base = this.store).getLength) && base.getLength()) != null ? temp1 : this.store.length)) != null ? temp : (() => {throw new Error("expected store to implement store.getLength()");})());});};});});});
//# sourceMappingURL=JsonStore.js.map
