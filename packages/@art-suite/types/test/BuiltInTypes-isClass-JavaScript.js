let { assert } = require("chai");
let { isClass } = require("../source");

// CoffeeScript v1.x class support functions (autogenerated by CoffeeScript)
let
  extend = function (child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

suite("isClass for JavaScript ES6 classes", () => {

  test("isClass()==true as long as class extends SOMETHING", () => {
    assert.isTrue(isClass(class Foo extends Object {}));
  })

  test("isClass empty-class derived class is true", () => {
    class Foo { };
    class Bar extends Foo { };

    assert.isTrue(isClass(Bar));
  });

  test("isClass non-empty-class derived class is true", () => {
    class Foo {
      constructor() {
        this.baz = 0;
      }
    }
    class Bar extends Foo {}

    assert.isTrue(isClass(Bar));
  });
})