import &ArtStandardLib

{}
  compareMatchQuality = (a, b) -> a.quality - b.quality
  getSearchRegExp = (searchString) ->
    {}
      searchString
      caseInsensative: new RegExp
        array letter from searchString.split('') with escapeRegexp letter
        .join '.*?'
        :ig

      caseSensative: new RegExp
        array letter from searchString.split('') with escapeRegexp letter
        .join '.*?'
        :g

  getMatchQuality = (string, {caseInsensative, caseSensative, searchString}) ->
    quality = 1/0

    caseSensative.lastIndex = caseInsensative.lastIndex
    match = fullMatch = null

    while (fullMatch = caseInsensative.exec string) && match = fullMatch[0]
      caseSensativeMatchLength = caseSensative.exec(string)?[0]?.length
      caseSensative.lastIndex = caseInsensative.lastIndex = 1 + position = fullMatch.index
      q1 =
        match.length / searchString.length
        * 1000
        + if caseSensativeMatchLength == match.length then 0 else 10
        + position / string.length
      quality = min quality, q1

    quality
