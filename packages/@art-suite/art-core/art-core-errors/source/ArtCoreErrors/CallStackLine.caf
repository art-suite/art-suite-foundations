import &StandardImport

class CallStackLine

  constructor: (line) ->
    @original = line
    @function = null
    @source = null
    @class = null
    @classPath = null
    @sourceFileName = null
    @sourcePath = null
    @sourceHostWithPort = null
    @sourceLine = 0
    @sourceColumn = 0

    if @_parseLineWithFunction line
    else @_parseLineWithoutFunction line
    @_subParseFunction()
    @_subParseSource()

  toString: -> @original

  #################
  # PRIVATE
  #################
  # example: "at myFunc (http://0.0.0.0:9000/scripts/spec/art/foundation/call_stack.js:10:30)"
  _parseLineWithFunction: (line) ->
    if r = line.match ///
        \s*at\s
        ((new\s)?[a-zA-Z0-9_.<>]+)
        \s\(
          ([^)]*)
          :([0-9]+)
          :([0-9]+)
        \)
      ///
      @function = r[1]
      @source = r[3]
      @sourceLine = r[4] | 0
      @sourceColumn = r[5] | 0


  _parseLineWithoutFunction: (line) ->
    if r = line.match  ///
        \s*at\s
        ([^)]*)
        :([0-9]+)
        :([0-9]+)
      ///
      @source = r[1]
      @sourceLine = r[2] | 0
      @sourceColumn = r[3] | 0

  _subParseSource: ->
    if @source
      url = parseUrl @source
      @sourceFileName = url.fileName
      @sourcePath = url.path
      @sourceHostWithPort = url.hostWithPort

  _subParseFunction: ->
    if @function
      f = @function.split "."
      @function = f[f.length-1]
      @function = undefined if @function == "<anonymous>"
      @class = f[f.length-2]
      @classPath = f.slice 0, f.length-2
