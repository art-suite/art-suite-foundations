"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["parseUrl"], [global, require('./StandardImport')], (parseUrl) => {let CallStackLine; return CallStackLine = Caf.defClass(class CallStackLine extends Object {constructor(line) {super(...arguments); this.original = line; this.function = null; this.source = null; this.class = null; this.classPath = null; this.sourceFileName = null; this.sourcePath = null; this.sourceHostWithPort = null; this.sourceLine = 0; this.sourceColumn = 0; if (this.parseLineWithFunction(line)) {undefined;} else {this.parseLineWithoutFunction(line);}; this.subParseFunction(); this.subParseSource();};}, function(CallStackLine, classSuper, instanceSuper) {this.prototype.toString = function() {return this.original;}; this.prototype.parseLineWithFunction = function(line) {let r; return (r = line.match(/\s*at\s((new\s)?[a-zA-Z0-9_.<>]+)\s\(([^)]*):([0-9]+):([0-9]+)\)/)) ? (/(?:)/, this.function = r[1], this.source = r[3], this.sourceLine = r[4] | 0, this.sourceColumn = r[5] | 0) : undefined;}; this.prototype.parseLineWithoutFunction = function(line) {let r; return (r = line.match(/\s*at\s([^)]*):([0-9]+):([0-9]+)/)) ? (/(?:)/, this.source = r[1], this.sourceLine = r[2] | 0, this.sourceColumn = r[3] | 0) : undefined;}; this.prototype.subParseSource = function() {let url; return this.source ? (url = parseUrl(this.source), this.sourceFileName = url.fileName, this.sourcePath = url.path, this.sourceHostWithPort = url.hostWithPort) : undefined;}; this.prototype.subParseFunction = function() {let f; return this.function ? (f = this.function.split("."), this.function = f[f.length - 1], (this.function === "<anonymous>") ? this.function = undefined : undefined, this.class = f[f.length - 2], this.classPath = f.slice(0, f.length - 2)) : undefined;};});});});
//# sourceMappingURL=CallStackLine.js.map
