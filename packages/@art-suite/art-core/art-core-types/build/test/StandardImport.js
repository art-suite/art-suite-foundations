"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["isPlainObject", "isArray", "isFunction", "RegExp", "isObject", "isString", "isBoolean", "isNumber", "isJsonType", "JSON"], [global, require('../ArtCoreTypes')], (isPlainObject, isArray, isFunction, RegExp, isObject, isString, isBoolean, isNumber, isJsonType, JSON) => {let inspectForTestStringR, describe, assert; inspectForTestStringR = function(a) {let base; return (() => {switch (false) {case !isPlainObject(a): return Caf.object(a, (v, k) => inspectForTestStringR(v)); case !isArray(a): return Caf.array(a, (v, k) => inspectForTestStringR(v)); case !isFunction(a): return `${Caf.toString(a)}`; case !(Caf.is(a, RegExp)): return `${Caf.toString(a)}`; case !isObject(a): return `<${Caf.toString(Caf.exists(base = a.class) && base.name)} instance>`; case !isString(a): case !isBoolean(a): case !isNumber(a): return a; case !(a === null): return null; default: return `${Caf.toString(a)}`;};})();}; return [({describe, assert} = require('art-testbench'), {describe, assert}), {inspectForTestString: function(a) {return isJsonType(a) ? JSON.stringify(inspectForTestStringR(a)).slice(0, 100) : inspectForTestStringR(a);}}, require('../../build')];});});
//# sourceMappingURL=StandardImport.js.map
