"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["communicationStatuses", "lowerCamelCase", "test", "assert", "Promise", "success"], [global, require('./StandardImport'), require('art-communication-status')], (communicationStatuses, lowerCamelCase, test, assert, Promise, success) => {return Caf.each2(communicationStatuses, ({failure}, status) => {let assertName; assertName = lowerCamelCase(`is ${Caf.toString(status)}`); test(`${Caf.toString(assertName)} succeeds for: '${Caf.toString(status)}'`, function() {return assert[assertName](status);}); test(`${Caf.toString(assertName)} succeeds for: {status: '${Caf.toString(status)}'}`, function() {return assert[assertName]({status});}); test(`${Caf.toString(assertName)} succeeds for: Promise.reject {status: '${Caf.toString(status)}'}`, function() {return assert[assertName](Promise.reject({status}));}); test(`${Caf.toString(assertName)} fails for: Promise.reject '${Caf.toString(status)}'`, function() {return assert.rejects(() => assert[assertName](Promise.reject(status)));}); test(`${Caf.toString(assertName)} fails for: Promise.resolve {status: '${Caf.toString(status)}'}`, function() {return assert.rejects(() => assert[assertName](Promise.resolve({status})));}); test(`${Caf.toString(assertName)} fails for: -> {status: '${Caf.toString(status)}'}`, function() {return assert.rejects(() => assert[assertName](() => {return {status};}));}); test(`assert.rejectsWithStatus ${Caf.toString(status)}`, function() {assert.rejectsWithStatus(status, Promise.reject({status})); assert.rejects(() => assert.rejectsWithStatus(status, Promise.reject({status: failure}))); return assert.rejects(() => assert.rejectsWithStatus(status, Promise.resolve({status: success})));}); return Caf.each2(communicationStatuses, ({failure}, s2) => test(`${Caf.toString(assertName)} fails for: '${Caf.toString(s2)}'`, function() {return assert.rejects(() => assert[assertName](s2));}), ({failure}, s2) => s2 !== status && failure);}, ({failure}, status) => failure);});});
//# sourceMappingURL=CommunicationStatus.test.js.map
