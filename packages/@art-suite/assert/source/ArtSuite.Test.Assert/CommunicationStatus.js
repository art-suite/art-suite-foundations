"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["assert", "lowerCamelCase", "isPromise", "isFunction", "merge", "Function"], [global, require('./StandardImport')], (assert, lowerCamelCase, isPromise, isFunction, merge, Function) => {Caf.each2(["missing", "clientFailure", "clientFailureNotAuthorized"], (status) => {let name; return assert[status] = assert[name = lowerCamelCase(`is ${Caf.toString(status)}`)] = function(communicationPromise, context) {let communicationResult, temp; return (isPromise(communicationPromise) || isFunction(communicationPromise)) ? assert.rejects(communicationPromise).then((response) => {assert.eq(response.status, status, (...contextArgs) => merge({response, context: (Caf.is(context, Function)) ? context(...contextArgs) : context})); return response;}) : (communicationResult = communicationPromise, assert.eq(((temp = Caf.exists(communicationResult) && communicationResult.status) != null ? temp : communicationResult), status, context));};}); return assert.rejectsWithStatus = function(status, _promise, context) {return assert.rejects(_promise, context).then((error) => assert.selectedEq({status}, error, context));};});});
//# sourceMappingURL=CommunicationStatus.js.map
