"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["assert", "isFunction", "Promise", "isPromise", "failWithExpectedMessage", "Function"], [global, require('./StandardImport')], (assert, isFunction, Promise, isPromise, failWithExpectedMessage, Function) => {let promisify; promisify = function(a) {return isFunction(a) ? Promise.then(() => a()) : isPromise(a) ? a : Promise.resolve(a);}; assert.resolves = function(a, context) {return promisify(a).then((v) => v, (v) => failWithExpectedMessage(context, a, "to be resolved. Instead, it rejected with:", v));}; assert.rejects = function(a, context) {return promisify(a).then((v) => failWithExpectedMessage(context, a, "to be rejected. Instead, it succeeded with:", v), (v) => v);}; assert.resolved = {}; return Caf.each2(assert, (v, k) => assert.resolved[k] = function(...args) {return Promise.all(args).then((resolvedArgs) => v(...resolvedArgs));}, (v, k) => Caf.is(v, Function));});});
//# sourceMappingURL=Promises.js.map
