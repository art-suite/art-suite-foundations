import &StandardImport, {} &ansiWordwrap
{}

  normalizeCommandName = lowerCamelCase

  wrap = (text, indent, maxWidth = 160) ->
    if present text
      if indent is Number && indent > 0
        indent = repeat ' ', indent
      if /\n/.test text
        array line in text.split "\n"
          wrap line, indent, maxWidth

        .join "\n"
      else
        if m = text.match /^ +/
          indent = "#{indent}#{m[0]}"
        res = ansiWordwrap
          text
          width: min maxWidth,
            process.stdout.columns
            - 1
            - if indent then indent.length else 0

        if indent?.length > 0
          indent + res.replace /\n/g, "\n#{indent}"
        else
          res

  wrapProse = (text, indent) -> wrap text, indent, 100

  normalizeCommands: (commands, help) ->
    commands = object v, k from commands with-key normalizeCommandName k
      if isFunction v
        run: v

      else unless isFunction v?.run
        throw new Error
          """
            #{k}'s run value is not a plain function. Details:

            #{formattedInspect [k]: v}

      else v

    if help?
      log.warn "ArtSuite/cli: 'help' option is deprecated. Use the new, improved commands option."
      description ?= help.description
      each commandHelp, rawK in help.commands
        k = normalizeCommandName rawK
        if commands[k]
          mergeInto commands[k], commandHelp
        else
          throw new Error "No matching command for help: commands: #{rawK}: {}}"

    commands