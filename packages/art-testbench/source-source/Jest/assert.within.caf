import &StandardImport

test 'assert.within built-in inequality' ->
  assert.within 5, 0, 10
  Promise.all []
    assert.rejects -> assert.within -1, 0, 10
    assert.rejects -> assert.within 11, 0, 10

test 'assert.within built-in inequality' ->
  assert.within 5, 0, 10

test 'assert.within custom inequality' ->
  class Point
    constructor: (@x, @y) ->
    lte: ({x, y}) -> @x <= x && @y <= y
    gte: ({x, y}) -> @x >= x && @y >= y
  point = (x, y) -> new Point x, y
  assert.within
    p5 = point 5, 5
    p0 = point 0, 0
    p10 = point 10, 10

  Promise.all []
    assert.rejects -> assert.within p10, p0, p5
    assert.rejects -> assert.within p0, p5, p10

test 'assert.within custom incomplete' ->
  point1 = (x, y) ->
    class Point
      constructor: (@x, @y) ->
      gte: ({x, y}) -> @x >= x && @y >= y

    new Point x, y

  assert.within
    p5 = point1 5, 5
    p0 = point1 0, 0
    p10 = point1 10, 10

  assert.within
    null
    0
    1
