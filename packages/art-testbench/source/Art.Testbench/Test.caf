import &StandardImport, &ErrorExtensions, &@ArtSuite/assert

## Accepts global TDD or BDD keywords; as long as either are declared, it'll work

test: (name, test, rest...) ->
  (global.it ? global.test)
    name

    ->
      p = try
        test()
      catch error
        throw cleanErrorStack error, /art-testbench|caffeine-script-runtime|bluebird|jest-jasmine2/

      if isPromise p
        p.catch (error) ->
          throw cleanErrorStack error, /art-testbench|caffeine-script-runtime|bluebird|jest-jasmine2/
      else undefined

    rest...

suite:          (args...) -> (global.describe   ? global.suite)         args...
suiteSetup:     (args...) -> (global.before     ? global.suiteSetup)    args...
suiteTeardown:  (args...) -> (global.after      ? global.suiteTeardown) args...
setup:          (args...) -> (global.beforeEach ? global.setup)         args...
teardown:       (args...) -> (global.afterEach  ? global.teardown)      args...

skipKnownFailingTest: (name, f) ->
  message = "SKIPPING KNOWN-FAILING TEST: #{name}"
  (global.it ? global.test) message, ->
    assert.rejects f, "This test is passing now, yay! Switch to a normal test."
