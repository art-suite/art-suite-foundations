import &StandardImport

suite:
  basic: ->
    MyClass = null
    setup ->
      class MyClass extends DeclarableMixin BaseClass
        @declarable
          myDeclarable:
            validate:   isString
            preprocess: upperCamelCase

    test "@declarable", ->

    test "using a declarable" ->
      class MyClassChild extends MyClass
        @myDeclarable "foo"

      assert.isFunction MyClassChild.myDeclarable
      assert.eq "Foo", MyClassChild.getMyDeclarable(), "Foo"
      assert.eq "Foo", (new MyClassChild).myDeclarable
      assert.eq "Foo", (new MyClassChild).getMyDeclarable()
      assert.eq undefined, MyClassChild.setMyDeclarable
      assert.eq undefined, (new MyClassChild).setMyDeclarable

  extendable: ->
    MyClass = MyClassChild = null
    setup ->
      class MyClass extends DeclarableMixin BaseClass
        @declarable
          myExtendable: extendable: {}

      class MyClassChild extends MyClass
        @myExtendable a: 123

    test "@declarable" ->

    test "extending simple" ->
      assert.eq MyClassChild.getMyExtendable(), a: 123

    test "extending full" ->
      class MyClassSibling extends MyClass
        @myExtendable c: 789

      class MyClassGrandChild extends MyClassChild
        @myExtendable b: 456

      assert.eq MyClassSibling.getMyExtendable(), c: 789
      assert.eq MyClassGrandChild.getMyExtendable(), a: 123, b: 456
