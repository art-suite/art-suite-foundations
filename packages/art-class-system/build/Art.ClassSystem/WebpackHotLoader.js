// Generated by CoffeeScript 1.12.7
(function() {
  var WebpackHotLoader;

  module.exports = WebpackHotLoader = (function() {
    function WebpackHotLoader() {}


    /*
    IN:
      _module should be the CommonJS 'module'
      modulePostLoadAction: (moduleState) -> ignored internally, returned from @runHot
    
    OUT: modulePostLoadAction moduleState
    
    EFFECT:
      modulePostLoadAction is run every time the module is loaded.
    
      Initially, moduleState is {}.
    
      moduleState is the same object every load:
        modulePostLoadAction can modify moduleState and it will persist through every reload.
    
      modulePostLoadAction is responsible for any and all
      update actions required due to the module load.
    
    NOTE:
      If _module is not hot, modulePostLoadAction will be invoked once with an empty {}.
     */

    WebpackHotLoader.runHot = function(_module, modulePostLoadAction) {
      var base, moduleState;
      if (!(_module != null ? _module.hot : void 0)) {
        return modulePostLoadAction({});
      }
      moduleState = (((base = _module.hot).data || (base.data = {
        moduleState: {}
      }))).moduleState;
      _module.hot.accept();
      _module.hot.dispose(function(data) {
        return data.moduleState = moduleState;
      });
      return modulePostLoadAction(moduleState);
    };

    return WebpackHotLoader;

  })();

}).call(this);

//# sourceMappingURL=WebpackHotLoader.js.map
