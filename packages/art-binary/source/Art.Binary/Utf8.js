// Generated by CoffeeScript 1.12.7
(function() {
  var Utf8;

  module.exports = Utf8 = (function() {
    function Utf8() {}

    Utf8.toBuffer = function(string) {
      return new Uint8Array(this.toArray(string));
    };

    Utf8.toArray = function(string) {
      var char, i, out, uriEncoded;
      uriEncoded = encodeURIComponent(string);
      i = 0;
      out = (function() {
        var results;
        results = [];
        while (i < uriEncoded.length) {
          char = uriEncoded.charCodeAt(i++);
          if (char === 0x25) {
            i += 2;
            results.push(parseInt(uriEncoded.substr(i - 2, 2), 16));
          } else {
            results.push(char);
          }
        }
        return results;
      })();
      return out;
    };

    Utf8.toString = function(a) {
      var error, x, y;
      if (a === void 0) {
        return "<undefined>";
      }
      if (a === null) {
        return "<null>";
      }
      try {
        if (a instanceof ArrayBuffer) {
          a = new Uint8Array(a);
        }
        return decodeURIComponent(((function() {
          var j, len, results;
          results = [];
          for (j = 0, len = a.length; j < len; j++) {
            x = a[j];
            y = x.toString(16);
            if (y.length < 2) {
              y = "0" + y;
            }
            y = "%" + y;
            results.push(y);
          }
          return results;
        })()).join(''));
      } catch (error1) {
        error = error1;
        return "<" + a.length + " binary bytes>";
      }
    };

    return Utf8;

  })();

}).call(this);
