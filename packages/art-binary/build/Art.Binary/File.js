// Generated by CoffeeScript 1.12.7
(function() {
  var BinaryString, File, Promise, StandardLib;

  StandardLib = require('art-standard-lib');

  Promise = StandardLib.Promise;

  BinaryString = require('./BinaryString');

  module.exports = File = (function() {
    var readAsArrayBuffer;

    function File() {}

    File._readWithPromise = function(readFunction) {
      return function(file) {
        return new Promise(function(resolve, reject) {
          var fr;
          fr = new FileReader;
          fr[readFunction](file);
          fr.onerror = reject;
          return fr.onload = (function(_this) {
            return function(event) {
              return resolve(event.target.result);
            };
          })(this);
        });
      };
    };

    File.readAsArrayBuffer = readAsArrayBuffer = File._readWithPromise("readAsArrayBuffer");

    File.readAsDataURL = File._readWithPromise("readAsDataURL");

    File.readAsBinaryString = function(file) {
      return readAsArrayBuffer(file).then(function(arrayBuffer) {
        return new BinaryString(arrayBuffer);
      });
    };

    return File;

  })();

}).call(this);

//# sourceMappingURL=File.js.map
